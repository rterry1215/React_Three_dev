{"version":3,"sources":["../../src/ar/arMarker.js"],"names":["React","useEffect","useRef","useAR","ARMarker","children","type","barcodeValue","patternUrl","params","markerRoot","arToolkitContext","markerControls","THREEx","ArMarkerControls","current","index","_arMarkersControls","indexOf","splice"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,SAASC,KAAT,QAAsB,MAAtB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAA0D;AAAA,MAAvDC,QAAuD,QAAvDA,QAAuD;AAAA,MAA7CC,IAA6C,QAA7CA,IAA6C;AAAA,MAAvCC,YAAuC,QAAvCA,YAAuC;AAAA,MAAzBC,UAAyB,QAAzBA,UAAyB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AACzE,MAAMC,UAAU,GAAGR,MAAM,EAAzB;;AADyE,eAE5CC,KAAK,EAFuC;AAAA,MAEjEQ,gBAFiE,UAEjEA,gBAFiE;;AAIzEV,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACU,gBAAL,EAAuB;AAAE;AAAQ;;AAEjC,QAAMC,cAAc,GAAG,IAAIC,MAAM,CAACC,gBAAX,CAA4BH,gBAA5B,EAA8CD,UAAU,CAACK,OAAzD;AACrBT,MAAAA,IAAI,EAAJA,IADqB;AAErBC,MAAAA,YAAY,EAAED,IAAI,KAAK,SAAT,GAAqBC,YAArB,GAAoC,IAF7B;AAGrBC,MAAAA,UAAU,EAAEF,IAAI,KAAK,SAAT,GAAqBE,UAArB,GAAkC;AAHzB,OAIlBC,MAJkB,EAAvB;AAOA,WAAO,YAAM;AACX,UAAMO,KAAK,GAAGL,gBAAgB,CAACM,kBAAjB,CAAoCC,OAApC,CAA4CN,cAA5C,CAAd;;AACAD,MAAAA,gBAAgB,CAACM,kBAAjB,CAAoCE,MAApC,CAA2CH,KAA3C,EAAkD,CAAlD;AACD,KAHD;AAID,GAdQ,CAAT;AAgBA,sBACE;AAAO,IAAA,GAAG,EAAGN;AAAb,KACIL,QADJ,CADF;AAKD,CAzBD;;AA2BA,eAAeD,QAAf","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport React, { useEffect, useRef } from \"react\"\nimport { useAR } from \"./ar\"\n\nconst ARMarker = ({ children, type, barcodeValue, patternUrl, params }) => {\n  const markerRoot = useRef()\n  const { arToolkitContext } = useAR()\n\n  useEffect(() => {\n    if (!arToolkitContext) { return }\n\n    const markerControls = new THREEx.ArMarkerControls(arToolkitContext, markerRoot.current, {\n      type,\n      barcodeValue: type === \"barcode\" ? barcodeValue : null,\n      patternUrl: type === \"pattern\" ? patternUrl : null,\n      ...params\n    })\n\n    return () => {\n      const index = arToolkitContext._arMarkersControls.indexOf(markerControls)\n      arToolkitContext._arMarkersControls.splice(index, 1)\n    }\n  })\n\n  return (\n    <group ref={ markerRoot }>\n      { children }\n    </group>\n  )\n}\n\nexport default ARMarker\n"],"file":"arMarker.js"}