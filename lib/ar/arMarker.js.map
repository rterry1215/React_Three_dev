{"version":3,"sources":["../../src/ar/arMarker.js"],"names":["React","useEffect","useRef","useState","useFrame","useAR","ARMarker","children","type","barcodeValue","patternUrl","params","onMarkerFound","onMarkerLost","markerRoot","arToolkitContext","isFound","setIsFound","markerControls","THREEx","ArMarkerControls","current","index","_arMarkersControls","indexOf","splice","visible"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,KAAT,QAAsB,MAAtB;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAQX;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,MANJC,IAMI,QANJA,IAMI;AAAA,MALJC,YAKI,QALJA,YAKI;AAAA,MAJJC,UAII,QAJJA,UAII;AAAA,MAHJC,MAGI,QAHJA,MAGI;AAAA,gCAFJC,aAEI;AAAA,MAFJA,aAEI,mCAFY,YAAM,CAAG,CAErB;AAAA,+BADJC,YACI;AAAA,MADJA,YACI,kCADW,YAAM,CAAG,CACpB;AACJ,MAAMC,UAAU,GAAGZ,MAAM,EAAzB;;AADI,eAEyBG,KAAK,EAF9B;AAAA,MAEIU,gBAFJ,UAEIA,gBAFJ;;AAAA,kBAG0BZ,QAAQ,CAAC,KAAD,CAHlC;AAAA;AAAA,MAGGa,OAHH;AAAA,MAGYC,UAHZ;;AAKJhB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACc,gBAAL,EAAuB;AAAE;AAAQ;;AAEjC,QAAMG,cAAc,GAAG,IAAIC,MAAM,CAACC,gBAAX,CAA4BL,gBAA5B,EAA8CD,UAAU,CAACO,OAAzD;AACrBb,MAAAA,IAAI,EAAJA,IADqB;AAErBC,MAAAA,YAAY,EAAED,IAAI,KAAK,SAAT,GAAqBC,YAArB,GAAoC,IAF7B;AAGrBC,MAAAA,UAAU,EAAEF,IAAI,KAAK,SAAT,GAAqBE,UAArB,GAAkC;AAHzB,OAIlBC,MAJkB,EAAvB;AAOA,WAAO,YAAM;AACX,UAAMW,KAAK,GAAGP,gBAAgB,CAACQ,kBAAjB,CAAoCC,OAApC,CAA4CN,cAA5C,CAAd;;AACAH,MAAAA,gBAAgB,CAACQ,kBAAjB,CAAoCE,MAApC,CAA2CH,KAA3C,EAAkD,CAAlD;AACD,KAHD;AAID,GAdQ,EAcN,EAdM,CAAT;AAgBAlB,EAAAA,QAAQ,CAAC,YAAM;AACb,QAAIU,UAAU,CAACO,OAAX,CAAmBK,OAAnB,IAA8B,CAACV,OAAnC,EAA4C;AAC1CC,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAL,MAAAA,aAAa;AACd,KAHD,MAGO,IAAI,CAACE,UAAU,CAACO,OAAX,CAAmBK,OAApB,IAA+BV,OAAnC,EAA4C;AACjDC,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAJ,MAAAA,YAAY;AACb;AACF,GARO,CAAR;AAUA,sBACE;AAAO,IAAA,GAAG,EAAGC;AAAb,KACIP,QADJ,CADF;AAKD,CA5CD;;AA8CA,eAAeD,QAAf","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\"\nimport { useFrame } from \"react-three-fiber\"\nimport { useAR } from \"./ar\"\n\nconst ARMarker = ({\n  children,\n  type,\n  barcodeValue,\n  patternUrl,\n  params,\n  onMarkerFound = () => { },\n  onMarkerLost = () => { }\n}) => {\n  const markerRoot = useRef()\n  const { arToolkitContext } = useAR()\n  const [isFound, setIsFound] = useState(false)\n\n  useEffect(() => {\n    if (!arToolkitContext) { return }\n\n    const markerControls = new THREEx.ArMarkerControls(arToolkitContext, markerRoot.current, {\n      type,\n      barcodeValue: type === \"barcode\" ? barcodeValue : null,\n      patternUrl: type === \"pattern\" ? patternUrl : null,\n      ...params\n    })\n\n    return () => {\n      const index = arToolkitContext._arMarkersControls.indexOf(markerControls)\n      arToolkitContext._arMarkersControls.splice(index, 1)\n    }\n  }, [])\n\n  useFrame(() => {\n    if (markerRoot.current.visible && !isFound) {\n      setIsFound(true)\n      onMarkerFound()\n    } else if (!markerRoot.current.visible && isFound) {\n      setIsFound(false)\n      onMarkerLost()\n    }\n  })\n\n  return (\n    <group ref={ markerRoot }>\n      { children }\n    </group>\n  )\n}\n\nexport default ARMarker\n"],"file":"arMarker.js"}