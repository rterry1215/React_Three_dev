{"version":3,"sources":["../../src/ar/ar.js"],"names":["React","createContext","useCallback","useEffect","useMemo","useFrame","useThree","ARContext","videoDomElemSelector","AR","children","patternRatio","matrixCodeType","detectionMode","cameraParametersUrl","gl","camera","arContext","arToolkitSource","THREEx","ArToolkitSource","sourceType","arToolkitContext","ArToolkitContext","onResize","onResizeElement","copyElementSizeTo","domElement","arController","canvas","onUnmount","window","removeEventListener","dispose","cameraParam","video","document","querySelector","srcObject","getTracks","map","track","stop","remove","init","onloadedmetadata","projectionMatrix","copy","getProjectionMatrix","addEventListener","ready","update","value","useAR","arValue","useContext"],"mappings":"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","sourcesContent":["import React, { createContext, useCallback, useEffect, useMemo } from \"react\"\nimport { useFrame, useThree } from \"react-three-fiber\"\n\nconst ARContext = createContext({})\nconst videoDomElemSelector = \"#arjs-video\"\n\nconst AR = ({\n  children,\n  patternRatio,\n  matrixCodeType,\n  detectionMode,\n  cameraParametersUrl\n}) => {\n  const { gl, camera } = useThree()\n\n  const arContext = useMemo(() => {\n    const arToolkitSource = new THREEx.ArToolkitSource({ sourceType: \"webcam\" })\n    const arToolkitContext = new THREEx.ArToolkitContext({\n      cameraParametersUrl,\n      detectionMode,\n      patternRatio,\n      matrixCodeType\n    })\n\n    return { arToolkitContext, arToolkitSource }\n  }, [patternRatio, matrixCodeType, cameraParametersUrl, detectionMode])\n\n  const onResize = useCallback(() => {\n    const { arToolkitContext, arToolkitSource } = arContext\n\n    arToolkitSource.onResizeElement()\n    arToolkitSource.copyElementSizeTo(gl.domElement)\n    if (arToolkitContext.arController !== null) {\n      arToolkitSource.copyElementSizeTo(arToolkitContext.arController.canvas)\n    }\n  }, [gl, arContext])\n\n  const onUnmount = useCallback(() => {\n    window.removeEventListener(\"resize\", onResize)\n\n    arContext.arToolkitContext.arController.dispose()\n    if (arContext.arToolkitContext.arController.cameraParam) {\n      arContext.arToolkitContext.arController.cameraParam.dispose()\n    }\n\n    delete arContext.arToolkitContext\n    delete arContext.arToolkitSource\n\n    const video = document.querySelector(videoDomElemSelector)\n    video.srcObject.getTracks().map(track => track.stop())\n    video.remove()\n  }, [onResize, arContext])\n\n  useEffect(() => {\n    arContext.arToolkitSource.init(() => {\n      const video = document.querySelector(\"#arjs-video\")\n      video.onloadedmetadata = onResize\n    })\n\n    arContext.arToolkitContext.init(() =>\n      camera.projectionMatrix.copy(arContext.arToolkitContext.getProjectionMatrix())\n    )\n\n    window.addEventListener(\"resize\", onResize)\n\n    return onUnmount\n  }, [arContext, camera, onResize, onUnmount])\n\n  useFrame(() => {\n    if (arContext.arToolkitSource && arContext.arToolkitSource.ready !== false) {\n      arContext.arToolkitContext.update(arContext.arToolkitSource.domElement)\n    }\n  })\n\n  const value = useMemo(() => ({ arToolkitContext: arContext.arToolkitContext }), [arContext])\n\n  return (\n    <ARContext.Provider value={ value }>\n      { children }\n    </ARContext.Provider>\n  )\n}\n\nconst useAR = () => {\n  const arValue = React.useContext(ARContext)\n  return React.useMemo(() => ({ ...arValue }), [arValue])\n}\n\nexport { AR, useAR }\n"],"file":"ar.js"}