{"version":3,"sources":["../../src/ar/ar.js"],"names":["React","createContext","useCallback","useEffect","useMemo","useFrame","useThree","ARContext","AR","children","contextParams","gl","camera","arContext","arToolkitSource","THREEx","ArToolkitSource","sourceType","arToolkitContext","ArToolkitContext","cameraParametersUrl","detectionMode","onResize","onResizeElement","copyElementSizeTo","domElement","arController","canvas","init","video","document","querySelector","onloadedmetadata","projectionMatrix","copy","getProjectionMatrix","window","addEventListener","removeEventListener","ready","update","value","useAR","arValue","useContext"],"mappings":"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","sourcesContent":["import React, { createContext, useCallback, useEffect, useMemo } from \"react\"\nimport { useFrame, useThree } from \"react-three-fiber\"\n\nconst ARContext = createContext({})\n\nconst AR = ({ children, contextParams }) => {\n  const { gl, camera } = useThree()\n\n  const arContext = useMemo(() => {\n    const arToolkitSource = new THREEx.ArToolkitSource({ sourceType: \"webcam\" })\n    const arToolkitContext = new THREEx.ArToolkitContext({\n      cameraParametersUrl: \"data/camera_para.dat\",\n      detectionMode: \"mono_and_matrix\",\n      ...contextParams\n    })\n\n    return { arToolkitContext, arToolkitSource }\n  }, [contextParams])\n\n  const onResize = useCallback(() => {\n    const { arToolkitContext, arToolkitSource } = arContext\n\n    arToolkitSource.onResizeElement()\n    arToolkitSource.copyElementSizeTo(gl.domElement)\n    if (arToolkitContext.arController !== null) {\n      arToolkitSource.copyElementSizeTo(arToolkitContext.arController.canvas)\n    }\n  }, [gl, arContext])\n\n  useEffect(() => {\n    arContext.arToolkitSource.init(() => {\n      const video = document.querySelector(\"#arjs-video\")\n      video.onloadedmetadata = onResize\n    })\n\n    arContext.arToolkitContext.init(() =>\n      camera.projectionMatrix.copy(arContext.arToolkitContext.getProjectionMatrix())\n    )\n\n    window.addEventListener(\"resize\", onResize)\n\n    return () => window.removeEventListener(\"resize\", onResize)\n  }, [arContext, camera, onResize])\n\n  useFrame(() => {\n    if (arContext.arToolkitSource && arContext.arToolkitSource.ready !== false) {\n      arContext.arToolkitContext.update(arContext.arToolkitSource.domElement)\n    }\n  })\n\n  const value = React.useMemo(() => ({ arToolkitContext: arContext.arToolkitContext }), [arContext])\n\n  return (\n    <ARContext.Provider value={ value }>\n      { children }\n    </ARContext.Provider>\n  )\n}\n\nconst useAR = () => {\n  const arValue = React.useContext(ARContext)\n  return React.useMemo(() => ({ ...arValue }), [arValue])\n}\n\nexport { AR, useAR }\n"],"file":"ar.js"}