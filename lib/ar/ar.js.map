{"version":3,"sources":["../../src/ar/ar.js"],"names":["React","createContext","useCallback","useEffect","useMemo","useFrame","useThree","ARContext","videoDomElemSelector","AR","children","patternRatio","matrixCodeType","gl","camera","arContext","console","log","arToolkitSource","THREEx","ArToolkitSource","sourceType","arToolkitContext","ArToolkitContext","cameraParametersUrl","detectionMode","onResize","onResizeElement","copyElementSizeTo","domElement","arController","canvas","onUnmount","window","removeEventListener","dispose","cameraParam","video","document","querySelector","srcObject","getTracks","map","track","stop","parentNode","removeChild","remove","init","onloadedmetadata","projectionMatrix","copy","getProjectionMatrix","addEventListener","ready","update","value","useAR","arValue","useContext"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,SAA5C,EAAuDC,OAAvD,QAAsE,OAAtE;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,mBAAnC;AAEA,IAAMC,SAAS,gBAAGN,aAAa,CAAC,EAAD,CAA/B;AACA,IAAMO,oBAAoB,GAAG,aAA7B;;AAEA,IAAMC,EAAE,GAAG,SAALA,EAAK,OAAgD;AAAA,MAA7CC,QAA6C,QAA7CA,QAA6C;AAAA,MAAnCC,YAAmC,QAAnCA,YAAmC;AAAA,MAArBC,cAAqB,QAArBA,cAAqB;;AAAA,kBAClCN,QAAQ,EAD0B;AAAA,MACjDO,EADiD,aACjDA,EADiD;AAAA,MAC7CC,MAD6C,aAC7CA,MAD6C;;AAGzD,MAAMC,SAAS,GAAGX,OAAO,CAAC,YAAM;AAC9BY,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,QAAMC,eAAe,GAAG,IAAIC,MAAM,CAACC,eAAX,CAA2B;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAA3B,CAAxB;AACA,QAAMC,gBAAgB,GAAG,IAAIH,MAAM,CAACI,gBAAX,CAA4B;AACnDC,MAAAA,mBAAmB,EAAE,sBAD8B;AAEnDC,MAAAA,aAAa,EAAE,iBAFoC;AAGnDd,MAAAA,YAAY,EAAZA,YAHmD;AAInDC,MAAAA,cAAc,EAAdA;AAJmD,KAA5B,CAAzB;AAOA,WAAO;AAAEU,MAAAA,gBAAgB,EAAhBA,gBAAF;AAAoBJ,MAAAA,eAAe,EAAfA;AAApB,KAAP;AACD,GAXwB,EAWtB,CAACP,YAAD,EAAeC,cAAf,CAXsB,CAAzB;AAaA,MAAMc,QAAQ,GAAGxB,WAAW,CAAC,YAAM;AAAA,QACzBoB,gBADyB,GACaP,SADb,CACzBO,gBADyB;AAAA,QACPJ,eADO,GACaH,SADb,CACPG,eADO;AAGjCA,IAAAA,eAAe,CAACS,eAAhB;AACAT,IAAAA,eAAe,CAACU,iBAAhB,CAAkCf,EAAE,CAACgB,UAArC;;AACA,QAAIP,gBAAgB,CAACQ,YAAjB,KAAkC,IAAtC,EAA4C;AAC1CZ,MAAAA,eAAe,CAACU,iBAAhB,CAAkCN,gBAAgB,CAACQ,YAAjB,CAA8BC,MAAhE;AACD;AACF,GAR2B,EAQzB,CAAClB,EAAD,EAAKE,SAAL,CARyB,CAA5B;AAUA,MAAMiB,SAAS,GAAG9B,WAAW,CAAC,YAAM;AAClCc,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AAEAgB,IAAAA,MAAM,CAACC,mBAAP,CAA2B,QAA3B,EAAqCR,QAArC;AAEAX,IAAAA,SAAS,CAACO,gBAAV,CAA2BQ,YAA3B,CAAwCK,OAAxC;;AACA,QAAIpB,SAAS,CAACO,gBAAV,CAA2BQ,YAA3B,CAAwCM,WAA5C,EAAyD;AACvDrB,MAAAA,SAAS,CAACO,gBAAV,CAA2BQ,YAA3B,CAAwCM,WAAxC,CAAoDD,OAApD;AACD;;AAED,WAAOpB,SAAS,CAACO,gBAAjB;AACA,WAAOP,SAAS,CAACG,eAAjB;AAEA,QAAMmB,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB/B,oBAAvB,CAAd;AACA6B,IAAAA,KAAK,CAACG,SAAN,CAAgBC,SAAhB,GAA4BC,GAA5B,CAAgC,UAAAC,KAAK;AAAA,aAAIA,KAAK,CAACC,IAAN,EAAJ;AAAA,KAArC;AACAP,IAAAA,KAAK,CAACQ,UAAN,CAAiBC,WAAjB,CAA6BT,KAA7B;AACAA,IAAAA,KAAK,CAACU,MAAN;AACD,GAjB4B,EAiB1B,CAACrB,QAAD,EAAWX,SAAX,CAjB0B,CAA7B;AAmBAZ,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,SAAS,CAACG,eAAV,CAA0B8B,IAA1B,CAA+B,YAAM;AACnC,UAAMX,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAd;AACAF,MAAAA,KAAK,CAACY,gBAAN,GAAyBvB,QAAzB;AACD,KAHD;AAKAX,IAAAA,SAAS,CAACO,gBAAV,CAA2B0B,IAA3B,CAAgC;AAAA,aAC9BlC,MAAM,CAACoC,gBAAP,CAAwBC,IAAxB,CAA6BpC,SAAS,CAACO,gBAAV,CAA2B8B,mBAA3B,EAA7B,CAD8B;AAAA,KAAhC;AAIAnB,IAAAA,MAAM,CAACoB,gBAAP,CAAwB,QAAxB,EAAkC3B,QAAlC;AAEA,WAAOM,SAAP;AACD,GAbQ,EAaN,CAACjB,SAAD,EAAYD,MAAZ,EAAoBY,QAApB,EAA8BM,SAA9B,CAbM,CAAT;AAeA3B,EAAAA,QAAQ,CAAC,YAAM;AACb,QAAIU,SAAS,CAACG,eAAV,IAA6BH,SAAS,CAACG,eAAV,CAA0BoC,KAA1B,KAAoC,KAArE,EAA4E;AAC1EvC,MAAAA,SAAS,CAACO,gBAAV,CAA2BiC,MAA3B,CAAkCxC,SAAS,CAACG,eAAV,CAA0BW,UAA5D;AACD;AACF,GAJO,CAAR;AAMA,MAAM2B,KAAK,GAAGpD,OAAO,CAAC;AAAA,WAAO;AAAEkB,MAAAA,gBAAgB,EAAEP,SAAS,CAACO;AAA9B,KAAP;AAAA,GAAD,EAA2D,CAACP,SAAD,CAA3D,CAArB;AAEA,sBACE,oBAAC,SAAD,CAAW,QAAX;AAAoB,IAAA,KAAK,EAAGyC;AAA5B,KACI9C,QADJ,CADF;AAKD,CAzED;;AA2EA,IAAM+C,KAAK,GAAG,SAARA,KAAQ,GAAM;AAClB,MAAMC,OAAO,GAAG1D,KAAK,CAAC2D,UAAN,CAAiBpD,SAAjB,CAAhB;AACA,SAAOP,KAAK,CAACI,OAAN,CAAc;AAAA,6BAAYsD,OAAZ;AAAA,GAAd,EAAsC,CAACA,OAAD,CAAtC,CAAP;AACD,CAHD;;AAKA,SAASjD,EAAT,EAAagD,KAAb","sourcesContent":["import React, { createContext, useCallback, useEffect, useMemo } from \"react\"\nimport { useFrame, useThree } from \"react-three-fiber\"\n\nconst ARContext = createContext({})\nconst videoDomElemSelector = \"#arjs-video\"\n\nconst AR = ({ children, patternRatio, matrixCodeType }) => {\n  const { gl, camera } = useThree()\n\n  const arContext = useMemo(() => {\n    console.log(\"Restart arContext\")\n    const arToolkitSource = new THREEx.ArToolkitSource({ sourceType: \"webcam\" })\n    const arToolkitContext = new THREEx.ArToolkitContext({\n      cameraParametersUrl: \"data/camera_para.dat\",\n      detectionMode: \"mono_and_matrix\",\n      patternRatio,\n      matrixCodeType\n    })\n\n    return { arToolkitContext, arToolkitSource }\n  }, [patternRatio, matrixCodeType])\n\n  const onResize = useCallback(() => {\n    const { arToolkitContext, arToolkitSource } = arContext\n\n    arToolkitSource.onResizeElement()\n    arToolkitSource.copyElementSizeTo(gl.domElement)\n    if (arToolkitContext.arController !== null) {\n      arToolkitSource.copyElementSizeTo(arToolkitContext.arController.canvas)\n    }\n  }, [gl, arContext])\n\n  const onUnmount = useCallback(() => {\n    console.log(\"onUnmount\")\n\n    window.removeEventListener(\"resize\", onResize)\n\n    arContext.arToolkitContext.arController.dispose()\n    if (arContext.arToolkitContext.arController.cameraParam) {\n      arContext.arToolkitContext.arController.cameraParam.dispose()\n    }\n\n    delete arContext.arToolkitContext\n    delete arContext.arToolkitSource\n\n    const video = document.querySelector(videoDomElemSelector)\n    video.srcObject.getTracks().map(track => track.stop())\n    video.parentNode.removeChild(video)\n    video.remove()\n  }, [onResize, arContext])\n\n  useEffect(() => {\n    arContext.arToolkitSource.init(() => {\n      const video = document.querySelector(\"#arjs-video\")\n      video.onloadedmetadata = onResize\n    })\n\n    arContext.arToolkitContext.init(() =>\n      camera.projectionMatrix.copy(arContext.arToolkitContext.getProjectionMatrix())\n    )\n\n    window.addEventListener(\"resize\", onResize)\n\n    return onUnmount\n  }, [arContext, camera, onResize, onUnmount])\n\n  useFrame(() => {\n    if (arContext.arToolkitSource && arContext.arToolkitSource.ready !== false) {\n      arContext.arToolkitContext.update(arContext.arToolkitSource.domElement)\n    }\n  })\n\n  const value = useMemo(() => ({ arToolkitContext: arContext.arToolkitContext }), [arContext])\n\n  return (\n    <ARContext.Provider value={ value }>\n      { children }\n    </ARContext.Provider>\n  )\n}\n\nconst useAR = () => {\n  const arValue = React.useContext(ARContext)\n  return React.useMemo(() => ({ ...arValue }), [arValue])\n}\n\nexport { AR, useAR }\n"],"file":"ar.js"}